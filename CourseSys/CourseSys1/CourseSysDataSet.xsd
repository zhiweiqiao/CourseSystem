<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="学生管理DataSet" targetNamespace="http://tempuri.org/学生管理DataSet.xsd" xmlns:mstns="http://tempuri.org/学生管理DataSet.xsd" xmlns="http://tempuri.org/学生管理DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="学生管理ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="学生管理ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CourseSys.Properties.Settings.GlobalReference.Default.学生管理ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="adminlTableAdapter" GeneratorDataComponentClassName="adminlTableAdapter" Name="adminl" UserDataComponentName="adminlTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.adminl" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[adminl] WHERE (([userID] = @Original_userID) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[adminl] ([userID], [password]) VALUES (@userID, @password);
SELECT userID, password FROM adminl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, password FROM dbo.adminl</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[adminl] SET [userID] = @userID, [password] = @password WHERE (([userID] = @Original_userID) AND ([password] = @Original_password));
SELECT userID, password FROM adminl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="changepassTableAdapter" GeneratorDataComponentClassName="changepassTableAdapter" Name="changepass" UserDataComponentName="changepassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.changepass" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[changepass] WHERE (([userID] = @Original_userID) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[changepass] ([userID], [password]) VALUES (@userID, @password);
SELECT userID, password FROM changepass WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, password FROM dbo.changepass</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[changepass] SET [userID] = @userID, [password] = @password WHERE (([userID] = @Original_userID) AND ([password] = @Original_password));
SELECT userID, password FROM changepass WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="courseTableAdapter" GeneratorDataComponentClassName="courseTableAdapter" Name="course" UserDataComponentName="courseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[course] WHERE (([cno] = @Original_cno) AND ([cname] = @Original_cname) AND ([ccredit] = @Original_ccredit) AND ([semester] = @Original_semester))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ccredit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ccredit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_semester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[course] ([cno], [cname], [ccredit], [semester]) VALUES (@cno, @cname, @ccredit, @semester);
SELECT cno, cname, ccredit, semester FROM course WHERE (cno = @cno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ccredit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ccredit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@semester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT cno, cname, ccredit, semester FROM dbo.course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[course] SET [cno] = @cno, [cname] = @cname, [ccredit] = @ccredit, [semester] = @semester WHERE (([cno] = @Original_cno) AND ([cname] = @Original_cname) AND ([ccredit] = @Original_ccredit) AND ([semester] = @Original_semester));
SELECT cno, cname, ccredit, semester FROM course WHERE (cno = @cno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ccredit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ccredit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@semester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ccredit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ccredit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_semester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="cno" DataSetColumn="cno" />
              <Mapping SourceColumn="cname" DataSetColumn="cname" />
              <Mapping SourceColumn="ccredit" DataSetColumn="ccredit" />
              <Mapping SourceColumn="semester" DataSetColumn="semester" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="scTableAdapter" GeneratorDataComponentClassName="scTableAdapter" Name="sc" UserDataComponentName="scTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.sc" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[sc] WHERE (([sno] = @Original_sno) AND ([cno] = @Original_cno) AND ([grade] = @Original_grade) AND ([xklb] = @Original_xklb))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_xklb" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="xklb" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[sc] ([sno], [cno], [grade], [xklb]) VALUES (@sno, @cno, @grade, @xklb);
SELECT sno, cno, grade, xklb FROM sc WHERE (cno = @cno) AND (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@xklb" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="xklb" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sno, cno, grade, xklb FROM dbo.sc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[sc] SET [sno] = @sno, [cno] = @cno, [grade] = @grade, [xklb] = @xklb WHERE (([sno] = @Original_sno) AND ([cno] = @Original_cno) AND ([grade] = @Original_grade) AND ([xklb] = @Original_xklb));
SELECT sno, cno, grade, xklb FROM sc WHERE (cno = @cno) AND (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@xklb" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="xklb" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_xklb" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="xklb" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sno" DataSetColumn="sno" />
              <Mapping SourceColumn="cno" DataSetColumn="cno" />
              <Mapping SourceColumn="grade" DataSetColumn="grade" />
              <Mapping SourceColumn="xklb" DataSetColumn="xklb" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([sno] = @Original_sno) AND ([sname] = @Original_sname) AND ([ssex] = @Original_ssex) AND ([sage] = @Original_sage) AND ([sdept] = @Original_sdept))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sname" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ssex" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ssex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sage" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sdept" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sdept" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([sno], [sname], [ssex], [sage], [sdept]) VALUES (@sno, @sname, @ssex, @sage, @sdept);
SELECT sno, sname, ssex, sage, sdept FROM student WHERE (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sname" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ssex" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ssex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sdept" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sdept" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sno, sname, ssex, sage, sdept FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [sno] = @sno, [sname] = @sname, [ssex] = @ssex, [sage] = @sage, [sdept] = @sdept WHERE (([sno] = @Original_sno) AND ([sname] = @Original_sname) AND ([ssex] = @Original_ssex) AND ([sage] = @Original_sage) AND ([sdept] = @Original_sdept));
SELECT sno, sname, ssex, sage, sdept FROM student WHERE (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sname" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ssex" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ssex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@sdept" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sdept" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sname" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ssex" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ssex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sage" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_sdept" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="sdept" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sno" DataSetColumn="sno" />
              <Mapping SourceColumn="sname" DataSetColumn="sname" />
              <Mapping SourceColumn="ssex" DataSetColumn="ssex" />
              <Mapping SourceColumn="sage" DataSetColumn="sage" />
              <Mapping SourceColumn="sdept" DataSetColumn="sdept" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentlTableAdapter" GeneratorDataComponentClassName="studentlTableAdapter" Name="studentl" UserDataComponentName="studentlTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.studentl" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[studentl] WHERE (([userID] = @Original_userID) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[studentl] ([userID], [password]) VALUES (@userID, @password);
SELECT userID, password FROM studentl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, password FROM dbo.studentl</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[studentl] SET [userID] = @userID, [password] = @password WHERE (([userID] = @Original_userID) AND ([password] = @Original_password));
SELECT userID, password FROM studentl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="teacherlTableAdapter" GeneratorDataComponentClassName="teacherlTableAdapter" Name="teacherl" UserDataComponentName="teacherlTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="学生管理ConnectionString (Settings)" DbObjectName="学生管理.dbo.teacherl" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[teacherl] WHERE (([userID] = @Original_userID) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[teacherl] ([userID], [password]) VALUES (@userID, @password);
SELECT userID, password FROM teacherl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, password FROM dbo.teacherl</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[teacherl] SET [userID] = @userID, [password] = @password WHERE (([userID] = @Original_userID) AND ([password] = @Original_password));
SELECT userID, password FROM teacherl WHERE (password = @password) AND (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="学生管理DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="学生管理DataSet" msprop:Generator_UserDSName="学生管理DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="adminl" msprop:Generator_TableClassName="adminlDataTable" msprop:Generator_RowEvArgName="adminlRowChangeEvent" msprop:Generator_TableVarName="tableadminl" msprop:Generator_TablePropName="adminl" msprop:Generator_RowDeletingName="adminlRowDeleting" msprop:Generator_UserTableName="adminl" msprop:Generator_RowChangingName="adminlRowChanging" msprop:Generator_RowDeletedName="adminlRowDeleted" msprop:Generator_RowChangedName="adminlRowChanged" msprop:Generator_RowEvHandlerName="adminlRowChangeEventHandler" msprop:Generator_RowClassName="adminlRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_UserColumnName="userID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="changepass" msprop:Generator_TableClassName="changepassDataTable" msprop:Generator_RowEvArgName="changepassRowChangeEvent" msprop:Generator_TableVarName="tablechangepass" msprop:Generator_TablePropName="changepass" msprop:Generator_RowDeletingName="changepassRowDeleting" msprop:Generator_UserTableName="changepass" msprop:Generator_RowChangingName="changepassRowChanging" msprop:Generator_RowDeletedName="changepassRowDeleted" msprop:Generator_RowChangedName="changepassRowChanged" msprop:Generator_RowEvHandlerName="changepassRowChangeEventHandler" msprop:Generator_RowClassName="changepassRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_UserColumnName="userID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="course" msprop:Generator_TableClassName="courseDataTable" msprop:Generator_RowEvArgName="courseRowChangeEvent" msprop:Generator_TableVarName="tablecourse" msprop:Generator_TablePropName="course" msprop:Generator_RowDeletingName="courseRowDeleting" msprop:Generator_UserTableName="course" msprop:Generator_RowChangingName="courseRowChanging" msprop:Generator_RowDeletedName="courseRowDeleted" msprop:Generator_RowChangedName="courseRowChanged" msprop:Generator_RowEvHandlerName="courseRowChangeEventHandler" msprop:Generator_RowClassName="courseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="cno" msprop:Generator_ColumnVarNameInTable="columncno" msprop:Generator_ColumnPropNameInRow="cno" msprop:Generator_ColumnPropNameInTable="cnoColumn" msprop:Generator_UserColumnName="cno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cname" msprop:Generator_ColumnVarNameInTable="columncname" msprop:Generator_ColumnPropNameInRow="cname" msprop:Generator_ColumnPropNameInTable="cnameColumn" msprop:Generator_UserColumnName="cname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ccredit" msprop:Generator_ColumnVarNameInTable="columnccredit" msprop:Generator_ColumnPropNameInRow="ccredit" msprop:Generator_ColumnPropNameInTable="ccreditColumn" msprop:Generator_UserColumnName="ccredit" type="xs:int" />
              <xs:element name="semester" msprop:Generator_ColumnVarNameInTable="columnsemester" msprop:Generator_ColumnPropNameInRow="semester" msprop:Generator_ColumnPropNameInTable="semesterColumn" msprop:Generator_UserColumnName="semester" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="sc" msprop:Generator_TableClassName="scDataTable" msprop:Generator_RowEvArgName="scRowChangeEvent" msprop:Generator_TableVarName="tablesc" msprop:Generator_TablePropName="sc" msprop:Generator_RowDeletingName="scRowDeleting" msprop:Generator_UserTableName="sc" msprop:Generator_RowChangingName="scRowChanging" msprop:Generator_RowDeletedName="scRowDeleted" msprop:Generator_RowChangedName="scRowChanged" msprop:Generator_RowEvHandlerName="scRowChangeEventHandler" msprop:Generator_RowClassName="scRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sno" msprop:Generator_ColumnVarNameInTable="columnsno" msprop:Generator_ColumnPropNameInRow="sno" msprop:Generator_ColumnPropNameInTable="snoColumn" msprop:Generator_UserColumnName="sno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cno" msprop:Generator_ColumnVarNameInTable="columncno" msprop:Generator_ColumnPropNameInRow="cno" msprop:Generator_ColumnPropNameInTable="cnoColumn" msprop:Generator_UserColumnName="cno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="grade" msprop:Generator_ColumnVarNameInTable="columngrade" msprop:Generator_ColumnPropNameInRow="grade" msprop:Generator_ColumnPropNameInTable="gradeColumn" msprop:Generator_UserColumnName="grade" type="xs:int" />
              <xs:element name="xklb" msprop:Generator_ColumnVarNameInTable="columnxklb" msprop:Generator_ColumnPropNameInRow="xklb" msprop:Generator_ColumnPropNameInTable="xklbColumn" msprop:Generator_UserColumnName="xklb">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_TableVarName="tablestudent" msprop:Generator_TablePropName="student" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_UserTableName="student" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowClassName="studentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sno" msprop:Generator_ColumnVarNameInTable="columnsno" msprop:Generator_ColumnPropNameInRow="sno" msprop:Generator_ColumnPropNameInTable="snoColumn" msprop:Generator_UserColumnName="sno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sname" msprop:Generator_ColumnVarNameInTable="columnsname" msprop:Generator_ColumnPropNameInRow="sname" msprop:Generator_ColumnPropNameInTable="snameColumn" msprop:Generator_UserColumnName="sname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ssex" msprop:Generator_ColumnVarNameInTable="columnssex" msprop:Generator_ColumnPropNameInRow="ssex" msprop:Generator_ColumnPropNameInTable="ssexColumn" msprop:Generator_UserColumnName="ssex">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sage" msprop:Generator_ColumnVarNameInTable="columnsage" msprop:Generator_ColumnPropNameInRow="sage" msprop:Generator_ColumnPropNameInTable="sageColumn" msprop:Generator_UserColumnName="sage" type="xs:int" />
              <xs:element name="sdept" msprop:Generator_ColumnVarNameInTable="columnsdept" msprop:Generator_ColumnPropNameInRow="sdept" msprop:Generator_ColumnPropNameInTable="sdeptColumn" msprop:Generator_UserColumnName="sdept">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="studentl" msprop:Generator_TableClassName="studentlDataTable" msprop:Generator_RowEvArgName="studentlRowChangeEvent" msprop:Generator_TableVarName="tablestudentl" msprop:Generator_TablePropName="studentl" msprop:Generator_RowDeletingName="studentlRowDeleting" msprop:Generator_UserTableName="studentl" msprop:Generator_RowChangingName="studentlRowChanging" msprop:Generator_RowDeletedName="studentlRowDeleted" msprop:Generator_RowChangedName="studentlRowChanged" msprop:Generator_RowEvHandlerName="studentlRowChangeEventHandler" msprop:Generator_RowClassName="studentlRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_UserColumnName="userID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="teacherl" msprop:Generator_TableClassName="teacherlDataTable" msprop:Generator_RowEvArgName="teacherlRowChangeEvent" msprop:Generator_TableVarName="tableteacherl" msprop:Generator_TablePropName="teacherl" msprop:Generator_RowDeletingName="teacherlRowDeleting" msprop:Generator_UserTableName="teacherl" msprop:Generator_RowChangingName="teacherlRowChanging" msprop:Generator_RowDeletedName="teacherlRowDeleted" msprop:Generator_RowChangedName="teacherlRowChanged" msprop:Generator_RowEvHandlerName="teacherlRowChangeEventHandler" msprop:Generator_RowClassName="teacherlRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_UserColumnName="userID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:adminl" />
      <xs:field xpath="mstns:userID" />
      <xs:field xpath="mstns:password" />
    </xs:unique>
    <xs:unique name="changepass_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:changepass" />
      <xs:field xpath="mstns:userID" />
      <xs:field xpath="mstns:password" />
    </xs:unique>
    <xs:unique name="course_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:course" />
      <xs:field xpath="mstns:cno" />
    </xs:unique>
    <xs:unique name="sc_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:sc" />
      <xs:field xpath="mstns:sno" />
      <xs:field xpath="mstns:cno" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:sno" />
    </xs:unique>
    <xs:unique name="studentl_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:studentl" />
      <xs:field xpath="mstns:userID" />
      <xs:field xpath="mstns:password" />
    </xs:unique>
    <xs:unique name="teacherl_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:teacherl" />
      <xs:field xpath="mstns:userID" />
      <xs:field xpath="mstns:password" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_adminl_changepass" msdata:parent="changepass" msdata:child="adminl" msdata:parentkey="userID password" msdata:childkey="userID password" msprop:Generator_UserChildTable="adminl" msprop:Generator_ChildPropName="GetadminlRows" msprop:Generator_UserParentTable="changepass" msprop:Generator_UserRelationName="FK_adminl_changepass" msprop:Generator_RelationVarName="relationFK_adminl_changepass" msprop:Generator_ParentPropName="changepassRowParent" />
      <msdata:Relationship name="FK_sc_course" msdata:parent="course" msdata:child="sc" msdata:parentkey="cno" msdata:childkey="cno" msprop:Generator_UserChildTable="sc" msprop:Generator_ChildPropName="GetscRows" msprop:Generator_UserParentTable="course" msprop:Generator_UserRelationName="FK_sc_course" msprop:Generator_RelationVarName="relationFK_sc_course" msprop:Generator_ParentPropName="courseRow" />
      <msdata:Relationship name="FK_sc_student" msdata:parent="student" msdata:child="sc" msdata:parentkey="sno" msdata:childkey="sno" msprop:Generator_UserChildTable="sc" msprop:Generator_ChildPropName="GetscRows" msprop:Generator_UserParentTable="student" msprop:Generator_UserRelationName="FK_sc_student" msprop:Generator_RelationVarName="relationFK_sc_student" msprop:Generator_ParentPropName="studentRow" />
      <msdata:Relationship name="FK_studentl_changepass" msdata:parent="changepass" msdata:child="studentl" msdata:parentkey="userID password" msdata:childkey="userID password" msprop:Generator_UserChildTable="studentl" msprop:Generator_ChildPropName="GetstudentlRows" msprop:Generator_UserParentTable="changepass" msprop:Generator_UserRelationName="FK_studentl_changepass" msprop:Generator_RelationVarName="relationFK_studentl_changepass" msprop:Generator_ParentPropName="changepassRowParent" />
      <msdata:Relationship name="FK_teacherl_changepass" msdata:parent="changepass" msdata:child="teacherl" msdata:parentkey="userID password" msdata:childkey="userID password" msprop:Generator_UserChildTable="teacherl" msprop:Generator_ChildPropName="GetteacherlRows" msprop:Generator_UserParentTable="changepass" msprop:Generator_UserRelationName="FK_teacherl_changepass" msprop:Generator_RelationVarName="relationFK_teacherl_changepass" msprop:Generator_ParentPropName="changepassRowParent" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>